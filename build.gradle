/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation "org.flywaydb:flyway-core:9.3.0"
    implementation 'org.springframework.boot:spring-boot-starter:2.7.3'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.3'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.7.3'
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '3.2.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.3'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.4.2'
    implementation group: 'org.springframework', name: 'spring-context-support', version: '5.3.22'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.7.3'
    // https://mvnrepository.com/artifact/com.h2database/h2
//    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.30'
//    implementation group: 'org.hibernate', name: 'hibernate-core', version: '6.1.1.Final', ext: 'pom'
//    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.7.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.3'
}

group = 'com.edu.uj.uploader'
version = '0.0.1-SNAPSHOT'
description = 'Uploader'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    enabled = true
    configurations.implementation.setCanBeResolved(true)
    configurations.runtimeOnly.setCanBeResolved(true)
    configurations.compileOnly.setCanBeResolved(true)
    manifest {
        attributes(
                'Implementation-Title': 'System Jar File',
                'Implementation-Version': project.version,
                'Main-Class': 'com.edu.uj.uploader.uploader.UploaderApplication',
                'Class-Path': configurations.implementation.collect({
                    "lib/${it.getName()}"
                } as Closure).join(' ') + ' ' + configurations.runtimeOnly.collect({
                    "lib/${it.getName()}"
                } as Closure).join(' ') + ' config/')
    }
    doLast {
        copy {
            from configurations.implementation
            into "${jar.destinationDirectory.getAsFile().get()}/lib"
        }
        copy {
            from configurations.runtimeOnly
            into "${jar.destinationDirectory.getAsFile().get()}/lib"
        }
        copy {
            from "${projectDir.path}/src/main/config"
            into "${jar.destinationDirectory.getAsFile().get()}/config"
        }
    }
}