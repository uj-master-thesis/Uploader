version: "3"
services:

    dbinventory:
      image: mcr.microsoft.com/azure-sql-edge
      environment:
          SA_PASSWORD: "Password@12345"
          ACCEPT_EULA: "Y"
      ports:
        - "14331:1433" 

    db:
      image: postgres:14.1-alpine
      restart: always
      environment:
        - POSTGRES_USER=user1
        - POSTGRES_HOST_AUTH_METHOD=trust
      ports:
        - '5435:5432'
      expose:
        - "5432"
        - "5435"
      volumes:
        - ./postgres-data:/var/lib/postgresql/data
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    uploader:
      build:
        context: .
        dockerfile: Dockerfile
      links:
        - kafka:kafka
        - db:db
        - mailhog:mailhog
      ports:
        - "8080:8080"
      depends_on:
        - zookeeper
        - kafka
        - mailhog
        - db
      environment:
        NEWS-BUS_PRODUCER_SERVER: "kafka:9093"
        SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/uploaderdb"
        SPRING_FLYWAY_URL: "jdbc:postgresql://db:5432/uploaderdb"
        SPRING_MAIL_HOST: "mailhog"

    mailhog:
      image: mailhog/mailhog
      container_name: 'mailhog'
      ports:
        - "1025:1025"
        - "8025:8025"

    gateway:
      build:
        context: ../Gateway/Gateway
        dockerfile: Dockerfile
      ports:
        - "5000:80"

    inventory:
        build: 
            context: ../Inventory/src
            dockerfile: Dockerfile
        ports: 
          - "5001:80"
        depends_on: 
          - dbinventory
          - zookeeper
          - kafka
        environment:
            ASPNETCORE_ENVIRONMENT: "Docker"

    zookeeper:
      image: wurstmeister/zookeeper:3.4.6
      ports:
      - "2181:2181"
    kafka:
      image: wurstmeister/kafka
      ports:
      - "9092:9092"
      - "9093:9093"
      expose:
      - "9093"
      environment:
        KAFKA_ADVERTISED_HOSTNAME: kafka
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_CREATE_TOPICS: "topic_test:1:1"
      volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      depends_on:
        - zookeeper

volumes:
  postgres-data:
    driver: local
